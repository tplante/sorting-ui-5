{"version":3,"sources":["App.js","index.js"],"names":["SKIP_VALUE","options","label","reorder","list","startIndex","endIndex","result","Array","from","_result$splice","splice","removed","Object","slicedToArray","iconStyles","opacity","transition","position","left","top","width","height","viewBox","concat","fill","optionStyles","display","justifyContent","fontWeight","cursor","borderRadius","margin","GRID_SIZE","padding","App","state","items","submitted","container","createRef","setOptions","choices","map","c","i","id","selected","showIcon","val","_this","setState","handleDragEnd","dragEvent","assertThisInitialized","current","destination","source","draggableId","menu","querySelector","menus","querySelectorAll","preventReorder","value","some","m","index","handleChange","event","target","_event$target","previousValue","newOptions","toConsumableArray","newItems","menuId","parseInt","split","hasPreviousValue","previousOptionIndex","findIndex","o","optionIndex","length","push","forEach","menuValue","pop","option","find","handleSubmit","this","_this2","react","ref","onSubmit","react_beautiful_dnd_esm","onDragEnd","droppableId","provided","snapshot","innerRef","style","flexDirection","item","key","assign","draggableProps","dragHandleProps","objectSpread","isDragging","draggableStyle","userSelect","background","d","ragnar_web_dist","alignItems","bg","mr","htmlFor","flex","name","onChange","Option","defaultValue","_ref","placeholder","React","renderer","createRenderer","renderStatic","reset","setup","keys","fonts","renderFont","files","ReactDOM","render","react_default","a","createElement","dist","theme","designSystemConfig","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.6e285ec2.chunk.js","sourcesContent":["// @flow\nimport * as React from \"react\";\nimport { createRef } from \"react\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\n\n// Redux\nimport { Box, BoxBorder, Select, Label } from \"@mentimeter/ragnar-web\";\n\nconst SKIP_VALUE = \"skip\";\nconst ICON_SIZE = 25;\nconst GRID_SIZE = 20;\nconst GUTTER_SIZE = GRID_SIZE / 2;\nconst ITEM_SIZE = GRID_SIZE * 2;\n\nconst options = [\n  { label: \"Hillary Clinton\" },\n  { label: \"George Washington\" },\n  { label: \"Barack Obama\" }\n];\n\n// Reorder the result\nconst reorder = (list, startIndex, endIndex) => {\n  const result = Array.from(list);\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n\n  return result;\n};\nconst getItemStyle = (isDragging, draggableStyle) => ({\n  position: \"relative\",\n  userSelect: \"none\",\n  padding: GRID_SIZE,\n  margin: `0 0 ${GUTTER_SIZE}px 0`,\n  // Change background colour if dragging\n  background: isDragging ? \"lightgreen\" : \"#d8d8d8\",\n  // Styles to apply on draggables\n  ...draggableStyle\n});\n\nconst iconStyles = {\n  opacity: 0,\n  transition: \"0.2s ease-in-out\",\n  position: \"absolute\",\n  left: -ICON_SIZE,\n  top: GRID_SIZE,\n  width: ICON_SIZE,\n  height: ICON_SIZE,\n  viewBox: `0 0 ${ICON_SIZE} ${ICON_SIZE}`,\n  fill: \"#2c5c6c\"\n};\nconst optionStyles = {\n  display: \"flex\",\n  justifyContent: \"space-between\",\n  fontWeight: \"bold\",\n  cursor: \"pointer\",\n  borderRadius: 3,\n  margin: `${GUTTER_SIZE}px ${GRID_SIZE}px 0 ${GRID_SIZE}px`,\n  padding: `${GUTTER_SIZE}px ${GRID_SIZE}px ${GUTTER_SIZE}px ${GUTTER_SIZE}px`\n};\n\nclass App extends React.PureComponent<Props, State> {\n  state = {\n    items: [],\n    options: [],\n    submitted: false\n  };\n\n  container = createRef();\n\n  componentDidMount() {\n    this.setOptions(options);\n  }\n\n  setOptions = choices => {\n    const options = choices.map((c, i) => ({\n      id: `option-${i}`,\n      label: c.label,\n      selected: false,\n      showIcon: false,\n      val: SKIP_VALUE\n    }));\n    this.setState({\n      items: [options[0]],\n      options\n    });\n  };\n\n  handleDragEnd = dragEvent => {\n    const {\n      container: { current: container }\n    } = this;\n    const { destination, source, draggableId } = dragEvent;\n    const menu = container.querySelector(`#${draggableId} select`);\n    // Convert NodeList to array\n    const menus = Array.from(container.querySelectorAll(\"select\"));\n    const preventReorder =\n      menu.value === SKIP_VALUE ||\n      menus.some(\n        (m, i) =>\n          m.value === SKIP_VALUE && destination && destination.index === i\n      );\n    // Dropped outside the list or an empty option is not last index\n    if (!destination || preventReorder) {\n      return;\n    }\n    const items = reorder(this.state.items, source.index, destination.index);\n    this.setState({ items });\n  };\n\n  handleChange = event => {\n    const {\n      target,\n      target: { value, previousValue, id }\n    } = event;\n    const {\n      container: { current: container }\n    } = this;\n    const newOptions = [...this.state.options];\n    const newItems = [...this.state.items];\n    const menus = container.querySelectorAll(\"select\");\n    const menuId = parseInt(id.split(\"-\")[1]);\n    const hasPreviousValue = previousValue && previousValue !== SKIP_VALUE;\n    if (hasPreviousValue) {\n      const previousOptionIndex = newOptions.findIndex(\n        o => o.id === previousValue\n      );\n      newOptions[previousOptionIndex].selected = false;\n    }\n    if (value !== SKIP_VALUE) {\n      const optionIndex = newOptions.findIndex(o => o.id === value);\n      newOptions[optionIndex].selected = true;\n      newItems[menuId].showIcon = true;\n      newItems[menuId].val = value;\n      if (!hasPreviousValue && menus.length < newOptions.length) {\n        newItems.push(newOptions[menuId + 1]);\n      }\n    } else if (hasPreviousValue) {\n      newItems[menuId].showIcon = false;\n      newItems[menuId].val = SKIP_VALUE;\n      menus.forEach((menu, i) => {\n        const { value: menuValue } = menu;\n        if (i > menuId) {\n          newItems.pop();\n          const option = newOptions.find(o => o.id === menuValue);\n          if (option) {\n            option.selected = false;\n          }\n        }\n      });\n    }\n    target.previousValue = value;\n    this.setState({ options: newOptions, items: newItems });\n  };\n\n  handleSubmit = () => {\n    this.setState({ submitted: !this.state.submitted });\n  };\n\n  render() {\n    return (\n      <div ref={this.container}>\n        <form onSubmit={this.handleSubmit}>\n          <DragDropContext onDragEnd={this.handleDragEnd}>\n            <Droppable droppableId=\"droppable\">\n              {(provided, snapshot) => (\n                <div\n                  ref={provided.innerRef}\n                  style={{ display: \"flex\", flexDirection: \"column\" }}\n                >\n                  {this.state.items.map((item, i) => (\n                    <Draggable key={item.id} draggableId={item.id} index={i}>\n                      {(provided, snapshot) => (\n                        <div\n                          id={item.id}\n                          ref={provided.innerRef}\n                          {...provided.draggableProps}\n                          {...provided.dragHandleProps}\n                          style={{\n                            ...getItemStyle(\n                              snapshot.isDragging,\n                              provided.draggableProps.style\n                            ),\n                            ...optionStyles\n                          }}\n                          key={item.id}\n                        >\n                          {i < this.state.items.length && (\n                            <svg\n                              style={{\n                                ...iconStyles,\n                                opacity: item.showIcon ? 1 : 0\n                              }}\n                            >\n                              <path\n                                d=\"M13.7578943,16.6318165 L10.6642975,19.7254012 C10.2981644,20.0915329 9.70460909,20.0915329 9.33847592,19.7254012 L6.24487915,16.6318165 C5.65429263,16.0412323 6.07257429,15.0313915 6.90780948,15.0314306 L8.90632706,15.0314306 L8.90628799,11.0937468 L4.9686279,11.0937468 L4.9686279,13.0922566 C4.9686279,13.9274885 3.95882223,14.3457685 3.36819665,13.7551843 L0.274599878,10.6615996 C-0.0915332925,10.2954679 -0.0915332925,9.70187587 0.274599878,9.3357832 L3.36819665,6.24219851 C3.95878316,5.6516143 4.9686279,6.06989433 4.9686279,6.90512625 L4.9686279,8.9062532 L8.90628799,8.9062532 L8.90628799,4.96860849 L6.90511417,4.96860849 C6.06987897,4.96860849 5.65159732,3.95880676 6.24218383,3.36818349 L9.3357806,0.274598805 C9.70191377,-0.091532935 10.295469,-0.091532935 10.6616022,0.274598805 L13.755199,3.36818349 C14.3457855,3.9587677 13.9275038,4.96860849 13.0922686,4.96860849 L11.0937511,4.96860849 L11.0937511,8.9062532 L15.0314112,8.9062532 L15.0314112,6.90774343 C15.0314112,6.07251151 16.0412168,5.65423148 16.6318034,6.24481569 L19.7254001,9.33840038 C20.0915333,9.70453212 20.0915333,10.2981241 19.7254001,10.6642168 L16.6318034,13.7578015 C16.0412168,14.3483857 15.0313721,13.9301057 15.0314112,13.0948737 L15.0314112,11.0937468 L11.0937901,11.0937468 L11.0937901,15.0313915 L13.094964,15.0313915 C13.9301992,15.0313915 14.3484808,16.0411932 13.7578943,16.6318165 Z\"\n                                id=\"Path\"\n                              />\n                            </svg>\n                          )}\n                          <BoxBorder\n                            alignItems=\"center\"\n                            justifyContent=\"center\"\n                            width={ITEM_SIZE}\n                            height={ITEM_SIZE}\n                            bg=\"brand\"\n                            mr={GUTTER_SIZE}\n                            borderRadius=\"50%\"\n                          >\n                            <Label value={i + 1} htmlFor={`menu-${i}`}>\n                              {i + 1}\n                            </Label>\n                          </BoxBorder>\n                          <Box\n                            flex={1}\n                            alignItems=\"center\"\n                            justifyContent=\"center\"\n                          >\n                            <Select\n                              id={`menu-${i}`}\n                              name={`menu-${i}`}\n                              onChange={this.handleChange}\n                            >\n                              <Select.Option\n                                key={SKIP_VALUE}\n                                id={SKIP_VALUE}\n                                value={SKIP_VALUE}\n                                defaultValue\n                              >\n                                Select an option\n                              </Select.Option>\n                              {this.state.options.map(\n                                ({ label, id, selected }) =>\n                                  (!selected || item.val === id) && (\n                                    <Select.Option key={id} id={id} value={id}>\n                                      {label}\n                                    </Select.Option>\n                                  )\n                              )}\n                            </Select>\n                          </Box>\n                        </div>\n                      )}\n                    </Draggable>\n                  ))}\n                  {provided.placeholder}\n                </div>\n              )}\n            </Droppable>\n          </DragDropContext>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  createRenderer,\n  Provider,\n  ThemeProvider,\n} from '@mentimeter/ragnar-react';\nimport { designSystemConfig } from '@mentimeter/ragnar-dsc';\nimport * as fonts from '@mentimeter/ragnar-fonts';\nimport { reset, setup } from '@mentimeter/ragnar-reset';\nimport App from './App';\n\nconst renderer = createRenderer();\nrenderer.renderStatic(reset(setup(`body, #root`)));\n\nObject.keys(fonts).forEach(key => {\n  renderer.renderFont('Gilroy', fonts[key].files, fonts[key].style);\n});\n\nReactDOM.render(\n  <Provider renderer={renderer}>\n    <ThemeProvider theme={designSystemConfig}>\n      <App />\n    </ThemeProvider>\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}